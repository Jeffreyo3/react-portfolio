
docker_image: &docker_image
  working_directory: ~/react-portfolio
  docker:
  - image: circleci/node:17.2-buster

restore_cache:
- &restore_cache
  restore_cache:
    keys:
    - v1-dependencies-{{ checksum "package.json" }}
    # fallback to using the latest cache if no exact match is found
    - v1-dependencies-

deploy: &deploy 
  docker:
    - image: google/cloud-sdk
  steps:
    - checkout
    - attach_workspace:
        at: .
    - run:
        name: Authenticate service account
        command: |
          echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
    - run: 
        name: 'Change service to deploy'
        command: sed 's/default/'$GOOGLE_SERVICE'/g' app.yml > app.yaml && cat app.yaml
    - run: 
        name: 'Deploy app'
        command: gcloud app deploy

build: &build
  <<: *docker_image
  steps:
    - checkout
    - *restore_cache
    - run: npm run build
    - persist_to_workspace:
        root: .
        paths: build

version: 2
jobs:
  install_dependencies:
    <<: *docker_image
    steps:
    - checkout
    - run: npm install
    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}


  # run_linter:
  #   <<: *docker_image
  #   steps:
  #   - checkout
  #   - *restore_cache
  #   - run: npm run lint

  # run_unit_tests:
  #   <<: *docker_image
  #   steps:
  #   - checkout
  #   - *restore_cache
  #   - run: npm run test

  build:
    <<: *build
  deploy:
    <<: *deploy
  # build-qa:
  #   <<: *build

  # build-prod:
  #   <<: *build

  # deploy-qa: 
  #   <<: *deploy

  # deploy-prod:
  #   <<: *deploy
  
workflows:
  version: 2
  continuos_integration:
    jobs:
      - install_dependencies
      # - run_linter:
      #     requires:
      #     - install_dependencies
      # - run_unit_tests:
      #     requires:
      #     - install_dependencies
      - build:
          requires:
            - install_dependencies
      - deploy: 
          requires: 
            - build